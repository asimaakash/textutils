{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","wCount","setWcount","style","color","heading","value","onChange","event","target","l","split","length","backgroundColor","rows","newText","toUpperCase","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","join","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fa3a657e.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\n                        </li>\n                    </ul>\n                    {/* <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button cla\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\n                    </form> */}\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About'\n  };","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpClick = ()=>{\n        // console.log(\"Uppercase was clicked: \" +  text);\n        let newText = text.toUpperCase();\n        setText(newText)\n    }\n\n    const handleLoClick = ()=>{ \n        let newText = text.toLowerCase();\n        setText(newText)\n    }\n\n    const handleClearClick = ()=>{ \n        let newText = '';\n        setText(newText)\n    }\n\n    const handleOnChange = (event)=>{\n        // console.log(\"On change\");\n        setText(event.target.value)\n        let l = text.split(/[ ]+/);\n        if(l[l.length-1]===' ')\n        {\n            setWcount(l.length-1);\n        }\n        else{\n            setWcount(l.length);\n        }\n    }\n\n    // Credits: A\n    const handleCopy = () => {\n        console.log(\"I am copy\");\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        text.setSelectionRange(0, 9999);\n        navigator.clipboard.writeText(text.value);\n    }\n\n    // Credits: Coding Wala\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"))\n    }\n\n    const [text, setText] = useState(''); \n    const [wCount,setWcount] = useState(0);\n    // text = \"new text\"; // Wrong way to change the state\n    // setText(\"new text\"); // Correct way to change the state\n    return (\n        <>\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{wCount} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n        </div>\n        </>\n    )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter the text to analyze below\" mode={mode}/>\n    </div>\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}